--- nametoindex.c	2011-06-27 22:53:52.000000000 +0800
+++ nametoindex.c89.c	2011-06-27 23:52:57.000000000 +0800
@@ -82,6 +82,7 @@
 
 	pgm_assert (AF_INET6 != iffamily);
 
+	{
 	DWORD dwRet, ifIndex;
 	ULONG ulOutBufLen = DEFAULT_BUFFER_SIZE;
 	PIP_ADAPTER_INFO pAdapterInfo = NULL;
@@ -90,7 +91,9 @@
 /* loop to handle interfaces coming online causing a buffer overflow
  * between first call to list buffer length and second call to enumerate.
  */
-	for (unsigned i = MAX_TRIES; i; i--)
+	{
+	unsigned i;
+	for (i = MAX_TRIES; i; i--)
 	{
 		pgm_debug ("IP_ADAPTER_INFO buffer length %lu bytes.", ulOutBufLen);
 		pAdapterInfo = (IP_ADAPTER_INFO*)_pgm_heap_alloc (ulOutBufLen);
@@ -102,6 +105,7 @@
 			break;
 		}
 	}
+	}
 
 	switch (dwRet) {
 	case ERROR_SUCCESS:	/* NO_ERROR */
@@ -122,7 +126,9 @@
 		 pAdapter;
 		 pAdapter = pAdapter->Next)
 	{
-		for (IP_ADDR_STRING *pIPAddr = &pAdapter->IpAddressList;
+		{
+		IP_ADDR_STRING *pIPAddr;
+		for (pIPAddr = &pAdapter->IpAddressList;
 			 pIPAddr;
 			 pIPAddr = pIPAddr->Next)
 		{
@@ -136,11 +142,13 @@
 				return ifIndex;
 			}
 		}
+		}
 	}
 
 	if (pAdapterInfo)
 		_pgm_heap_free (pAdapterInfo);
 	return 0;
+	}
 }
 
 /* Retrieve adapter index via name.
@@ -159,6 +167,7 @@
 {
 	pgm_return_val_if_fail (NULL != ifname, 0);
 
+	{
 	ULONG ifIndex;
 	DWORD dwSize = DEFAULT_BUFFER_SIZE, dwRet;
 	IP_ADAPTER_ADDRESSES *pAdapterAddresses = NULL, *adapter;
@@ -176,7 +185,9 @@
 /* loop to handle interfaces coming online causing a buffer overflow
  * between first call to list buffer length and second call to enumerate.
  */
-	for (unsigned i = MAX_TRIES; i; i--)
+	{
+	unsigned i;
+	for (i = MAX_TRIES; i; i--)
 	{
 		pAdapterAddresses = (IP_ADAPTER_ADDRESSES*)_pgm_heap_alloc (dwSize);
 		dwRet = GetAdaptersAddresses (AF_UNSPEC,
@@ -194,6 +205,7 @@
 			break;
 		}
 	}
+	}
 
 	switch (dwRet) {
 	case ERROR_SUCCESS:
@@ -224,6 +236,7 @@
 	if (pAdapterAddresses)
 		_pgm_heap_free (pAdapterAddresses);
 	return 0;
+	}
 }
 #endif /* _WIN32 */
 
